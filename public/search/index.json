[{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\n函数指针 使用指针指向内存中的一段代码，就是函数指针：\n #includebool compare(int a, int b) {\nreturn a \u0026gt; b;\n}\nvoid print(int a, int b,bool (*p)(int,int)) {\nstd::cout \u0026laquo; p(a,b) \u0026laquo; std::endl;\n}\nint main() {\nbool (*p)(int,int) = compare;\nprint(1, 2, p);\nreturn 0;\n}\n上面的实例中，定义了一个函数指针p，它指向函数compare，函数print通过函数指针p回调了compare。\n std::function std::function是一个函数包装模板，用于表示各种可调用对象。std::function对象可被拷贝和转移，并且可以使用指定的调用特征来直接调用目标元素。当std::function对象未包裹任何实际的可调用元素，调用该std::function对象将抛出std::bad_function_call异常。\n用std::function改写上面的例子：\n #include#includebool compare(int a, int b) {\nreturn a \u0026gt; b;\n}\nvoid print(int a, int b,std::function\u0026lt;bool(int,int)\u0026gt; p) {\nstd::cout \u0026laquo; p(a,b) \u0026laquo; std::endl;\n}\nint main() {\nstd::function\u0026lt;bool(int, int)\u0026gt; p = compare;\nprint(1, 2, p);\nreturn 0;\n}\n 区别 那么，既然有函数指针，为什么还要搞一个std::function呢\n函数指针的作用就是把一段代码当作变量传递，即回调函数。\n","date":"2022-10-07T00:00:00Z","permalink":"https://blog-c1g.pages.dev/p/%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88%E5%92%8Cstdfunction/","title":"函数指针和std::function"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6","date":"2022-10-06T00:00:00Z","image":"https://blog-c1g.pages.dev/pawel-czerwinski-8uZPynIu-rQ-unsplash.jpg","permalink":"https://blog-c1g.pages.dev/p/custom-test-page/","title":"Custom Test Page"}]